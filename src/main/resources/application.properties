#Fonctional informations
#fee in %
application.fee.rate=0.05
application.emailsysteme = paymybuddy@paymybuddy.com
application.personid = 1
application.accountid=1

#Technical informations
server.port 8080

#Database access for production
spring.datasource.url=jdbc:mysql://localhost:3306/paymybuddy_prod?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=Europe/Paris
spring.datasource.username=buddy
spring.datasource.password=ENC(hzST9E7ymRD+2NzskjfDag==)

#Key is in a windows environnement variable
#jasypt.encryptor.password=Buddy2020
jasypt.encryptor.password=JASYPT_ENCRYPTOR_PASSWORD
#creation du pwf C:\Outils\jasypt-1.9.2\bin>encrypt.bat input=buddy password=Buddy2020
#spring.datasource.password=buddy

#`hibernate_sequence' doesn't exist in production
spring.jpa.hibernate.use-new-id-generator-mappings=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
#force le chargement de la base à partir du data.sql en prod
spring.datasource.initialization-mode=always

# drop n create table, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create

# Configurations H2
spring.jpa.show-sql=true
spring.h2.console.enabled=true

# Spring Security
#spring.security.enabled = false
#management.security.enabled = false
#security.basic.enabled = false

#Spring Security
#spring.security.user.name=user
#spring.security.user.password=password

application.security.user.name=user
application.security.user.password=password


#génération du script de la base
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=drop.sql

